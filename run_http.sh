#!/bin/bash

rm 1.log 2> /dev/null

./cpolar http 8081 > /dev/null &

echo "cpolar pid: $!"

reptyr -T $! > 1.log &

echo "reptyr pid: $!"

sleep 15s

node watch_http.js > /dev/null

###############################################################################
#a=`./a.out`
#echo "获取a.out的输出结果到变量a：$a"
#./a.out &
#echo "获取a.out进程的pid：$!"

###############################################################################
#./a.out
#echo "1"
#echo "a$!"
#java T
#echo "2"
#echo "b$!"
# 正常情况是同步执行
#c
#1
#a
#java
#2
#b

###############################################################################
#./a.out &
#echo "1"
#echo "a$!"
#java T &
#echo "2"
#echo "b$!"
# &是后台运行 异步执行
#1
#a11641
#2
#b11642
#c
#java

###############################################################################
#./a.out &
#wait
#echo "1"
#echo "a$!"
#java T &
#wait
#echo "2"
#echo "b$!"
# wait等待紫禁城结束 同步执行
#c
#1
#a12852
#java
#2
#b12853

###############################################################################
#rm 1.log 2> /dev/null
#echo "gg" 1> /dev/null


###############################################################################
# shell是fork()+exec()来处理子命令
# 1)$0 shell本身文件名
# 2)$? 最后运行命令的返回值
# 3)$! shell最后运行的后台进程的PID
# 4)$$ shell本身的pid
# 5)$# shell的参数个数
# 6)$@ 所有参数列表，以"$1 $2 … $n"的形式输出所有参数，此选项参数可超过9个
# 7)$* 所有参数列表，以"$1" "$2" … "$n" 的形式输出所有参数
